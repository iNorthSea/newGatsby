.Header{
    position: fixed;
    /* 位置类型为固定 */
    padding: 32px 0;
    width: 100%;
    z-index: 100;
    /* z-index 属性设置元素的堆叠顺序。拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面。
    注释：元素可拥有负的 z-index 属性值。
    注释：Z-index 仅能在定位元素上奏效（例如 position:absolute;）！
    说明：该属性设置一个定位元素沿 z 轴的位置，z 轴定义为垂直延伸到显示区的轴。如果为正数，则离用户更近，为负数则表示离用户更远 
    http://www.w3school.com.cn/cssref/pr_pos_z-index.asp */
    transition: 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
}

.HeaderScrolled {
    padding: 12px 0;
    background: rgba(0,0,0,0.88);
    backdrop-filter: blur(20px);
}

.HeaderGroup{
    max-width: 800;
    margin: 0 auto;
    display: grid;
    /* 表示为网格布局，和flex布局中的display：flex意义相同，同样该属性还可以取值：inline-grid和subgrid */
    grid-template-columns: repeat(5, auto); 
    /* repeat(5, auto)为一种复写方式，作用等同于 auto, auto, auto, auto, auto */
    /* grid-template-columns 
    创建网格的列数，除了百分比的形式之外，还支持各种单位的组合形式，比如 grid-template-columns: 100px 20% 1em 1vw 20%; 
    但是有个repeate函数可以简化相同的值，比如grid-template-columns: repeat（5， 20%）表示5个20%的宽度，和例子中的意义完全相同。 
    fr用于等分剩余空间，它的大小是将该属性上的所有可计算的值（包括各种单位，百分比）除去后，剩余空间的大小。 
    推荐使用fr。它也会自动计算除了grid-gap之外其余的部分。 
    如 grid-template-columns：100px 1fr 2fr repeat(2, 20%)。同样的5列布局，其中的 1fr 表示宽度为总宽度减去左边的100px和右侧两列的20%之后剩余的部分除以三。即第二列的宽度是将会是第三列的一半。*/

    align-items: center;
    justify-items: center;
    /* align用于垂直方向， 而justify则用于水平方向。 */
}

.Header a{
    font-size: 20px;
    font-weight: 600;
    line-height: 30px;
    text-align: center;
    color: #F2F2F2;
    transition: 0.3s;
}

.Header a:hover{
    font-weight: 800;
    transform: translateY(-2px) scale(1.1);
}

.Header button{
    font-size: 20px;
    font-weight: 600;
    color: #000000;
    padding: 8px 24px;
    background: #56CCF2;
    border: none; 
    border-radius: 8px;
    outline: none;
    /* outline （轮廓）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。
    注释：轮廓线不会占据空间，也不一定是矩形。
    outline 简写属性在一个声明中设置所有的轮廓属性。 
    http://www.w3school.com.cn/cssref/pr_outline.asp */

    cursor: pointer;
    /* cursor 属性规定要显示的光标的类型（形状）。
    该属性定义了鼠标指针放在一个元素边界范围内时所用的光标形状（不过 CSS2.1 没有定义由哪个边界确定这个范围）。
    http://www.w3school.com.cn/cssref/pr_class_cursor.asp */

    transition: 0.3s;
    -moz-transition: 0.3s; /* Firefox 4 */
    -webkit-transition: 0.3s; /* Safari 和 Chrome */
    -o-transition: 0.3s; /* Opera */
    /* transition 属性是一个简写属性，用于设置四个过渡属性：
    transition-property
    transition-duration
    transition-timing-function
    transition-delay
    http://www.w3school.com.cn/cssref/pr_transition.asp */
}

.Header button:hover{
    font-weight: 800;
    background: #FFFFFF;
    box-shadow: 0 8px 20px rgba(0,0,0,0.2);
    transform: translateY(-1px) scale(1.01);
    /* transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。
    http://www.w3school.com.cn/cssref/pr_transform.asp */
}

@media (max-width: 640px) {
    /* @media 规则使你有能力在相同的样式表中，使用不同的样式规则来针对不同的媒介。
    下面这个例子中的样式告知浏览器在显示器上显示 14 像素的 Verdana 字体。但是假如页面需要被打印，将使用 10 个像素的 Times 字体。注意：font-weight 被设置为粗体，不论显示器还是纸媒介： */
    .Header {
        padding: 15px 0;
    }

    .HeaderGroup {
        grid-template-columns: repeat(4, auto);
    }

    .Header a:nth-child(4) {
        display: none;
    }
    /* :nth-child(n) 选择器匹配属于其父元素的第 N 个子元素，不论元素的类型。
    n 可以是数字、关键词或公式。 */
}
