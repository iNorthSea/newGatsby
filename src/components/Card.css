.Card{
    width: 300px;
    height: 224px;
    position: relative;
    /* position 属性规定元素的定位类型。这个属性定义建立元素布局所用的定位机制。任何元素都可以定位，不过绝对或固定元素会生成一个块级框，而不论该元素本身是什么类型。相对定位元素会相对于它在正常流中的默认位置偏移。 */
    /* absolute	
    生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。
    元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定。
    fixed	
    生成绝对定位的元素，相对于浏览器窗口进行定位。
    元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定。
    relative	
    生成相对定位的元素，相对于其正常位置进行定位。
    因此，"left:20" 会向元素的 LEFT 位置添加 20 像素。
    static	默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）。
    inherit	规定应该从父元素继承 position 属性的值。 */
    overflow: hidden;
    /* overflow 属性规定当内容溢出元素框时发生的事情。
    说明：这个属性定义溢出元素内容区的内容会如何处理。如果值为 scroll，不论是否需要，用户代理都会提供一种滚动机制。因此，有可能即使元素框中可以放下所有内容也会出现滚动条。 */
    border-radius: 20px;
    box-shadow: 0px 20px 40px rgba(80, 79, 197, 0.25);
    display: grid;
    grid-template-rows: 1fr 1fr;
    /* 非负值，用单位 fr 来定义网格轨道大小的弹性系数。 每个定义了 <flex> 的网格轨道会按比例分配剩余的可用空间。当外层用一个 minmax() 表示时，它将是一个自动最小值(即 minmax(auto, <flex>) ) 。 */
    transition: 0.5s;
}

.Card:hover{
    transform: scale(1.08);
    box-shadow: 0 30px 60px rgba(0, 0, 0, 0.2);
}

.Card:hover img{
    transform: translateY(-20px);
    transform: scale(1.1);
}

.Card img{
    position: absolute;
    top: 0px;
    height: 110%;
    z-index: -1;
    transition: 0.5s;
}

.Card h3{
    position: absolute;
    margin: 32px 100px 80px 20px;
    width: 150px;
    font-size: 28px;
    line-height: 36px;
    color: #FFFFFF;
}

.Card p{
    position: absolute;
    margin: 0 20px 20px 20px;
    align-self: flex-end;
    /* align-self 属性定义flex子项单独在侧轴（纵轴）方向上的对齐方式。 */
    /* 元素位于容器的结尾。弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴结束边界。 */
    font-weight: 400;
    font-size: 20px;
    line-height: 24px;
    color: #FFFFFF;
    opacity: 0.7;
}

.Card button{
    position: absolute;
    Top: 36px;
    right: 20px;
    padding: 0 12px;
    align-items: center;
    font-size: 16px;
    font-weight: 600;
    text-align: center;
    color: #FFFFFF;
    line-height: 28px;
    background: rgba(0, 0, 0, 0.4);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 16px;
    transition: 0.3s;
}

.Card button:hover{
    color: rgb(24, 128, 248);
    background: #FFFFFF;
    padding: 0 20px;
}